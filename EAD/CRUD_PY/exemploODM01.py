
from mongoengine import Document, StringField, IntField, ListField, ReferenceField, connect

connect(
    db="teste",              # nome do banco
    username="teste",      # usu√°rio criado no MongoDB
    password="senha",      # senha do usu√°rio
    host="177.67.253.61",            # ou IP/hostname do servidor
    port=27017,
    authentication_source="teste"  # normalmente "admin" ou o pr√≥prio db
)

class Musica(Document):
    titulo = StringField(required=True, max_length=100)
    duracao = IntField(min_value=1)  # dura√ß√£o em segundos


    def __str__(self):      
        return f"{self.titulo} ({self.duracao}s)"


class Album(Document):
    titulo = StringField(required=True, max_length=100)
    ano = IntField(min_value=1900, max_value=2100)
    musicas = ListField(ReferenceField(Musica))

    def __str__(self):
        return f"{self.titulo} - {self.ano}"


class Artista(Document):
    nome = StringField(required=True, max_length=100)
    albuns = ListField(ReferenceField(Album))

    def __str__(self):
        return f"{self.nome}"


def criar_artista():
    nome = input("Nome do artista: ")
    artista = Artista(nome=nome)
    artista.save()
    print(f"‚úÖ Artista '{nome}' criado com sucesso!")


def criar_album():
    listar_artistas()
    artista_id = input("Digite o ID do artista: ")
    artista = Artista.objects(id=artista_id).first()
    if not artista:
        print("‚ö†Ô∏è Artista n√£o encontrado!")
        return
    titulo = input("T√≠tulo do √°lbum: ")
    ano = int(input("Ano do √°lbum: "))
    album = Album(titulo=titulo, ano=ano)
    album.save()
    artista.albuns.append(album)
    artista.save()
    print(f"‚úÖ √Ålbum '{titulo}' criado para o artista {artista.nome}!")


def criar_musica():
    listar_albuns()
    album_id = input("Digite o ID do √°lbum: ")
    album = Album.objects(id=album_id).first()
    if not album:
        print("‚ö†Ô∏è √Ålbum n√£o encontrado!")
        return
    titulo = input("T√≠tulo da m√∫sica: ")
    duracao = int(input("Dura√ß√£o em segundos: "))
    musica = Musica(titulo=titulo, duracao=duracao)
    musica.save()
    album.musicas.append(musica)
    album.save()
    print(f"‚úÖ M√∫sica '{titulo}' adicionada ao √°lbum {album.titulo}!")


def listar_artistas():
    print("\nüé§ Lista de artistas:")
    for artista in Artista.objects:
        print(f"ID: {artista.id} | Nome: {artista.nome}")


def listar_albuns():
    print("\nüìÄ Lista de √°lbuns:")
    for album in Album.objects:
        print(f"ID: {album.id} | {album.titulo} ({album.ano})")


def listar_tudo():
    print("\nüìã Cat√°logo completo:")
    for artista in Artista.objects:
        print(f"üé§ {artista.nome} (ID: {artista.id})")
        for album in artista.albuns:
            print(f"   üìÄ {album.titulo} ({album.ano}) (ID: {album.id})")
            for musica in album.musicas:
                print(f"      üéµ {musica.titulo} - {musica.duracao}s (ID: {musica.id})")


def atualizar_artista():
    listar_artistas()
    artista_id = input("Digite o ID do artista a ser atualizado: ")
    artista = Artista.objects(id=artista_id).first()
    if not artista:
        print("‚ö†Ô∏è Artista n√£o encontrado!")
        return
    novo_nome = input(f"Novo nome para '{artista.nome}': ")
    artista.nome = novo_nome
    artista.save()
    print(f"‚úÖ Nome atualizado para {novo_nome}!")


def deletar_artista():
    listar_artistas()
    artista_id = input("Digite o ID do artista a ser deletado: ")
    artista = Artista.objects(id=artista_id).first()
    if not artista:
        print("‚ö†Ô∏è Artista n√£o encontrado!")
        return
    for album in artista.albuns:
        for musica in album.musicas:
            musica.delete()
        album.delete()
    artista.delete()
    print("‚úÖ Artista e todos os √°lbuns e m√∫sicas foram removidos!")


def menu():
    while True:
        print("\n=== MENU PRINCIPAL ===")
        print("1 - Criar Artista")
        print("2 - Criar √Ålbum")
        print("3 - Criar M√∫sica")
        print("4 - Listar Artistas")
        print("5 - Listar Cat√°logo Completo")
        print("6 - Atualizar Artista")
        print("7 - Deletar Artista")
        print("0 - Sair")

        opcao = input("Escolha uma op√ß√£o: ")

        if opcao == "1":
            criar_artista()
        elif opcao == "2":
            criar_album()
        elif opcao == "3":
            criar_musica()
        elif opcao == "4":
            listar_artistas()
        elif opcao == "5":
            listar_tudo()
        elif opcao == "6":
            atualizar_artista()
        elif opcao == "7":
            deletar_artista()
        elif opcao == "0":
            print("üëã Saindo da aplica√ß√£o...")
            break
        else:
            print("‚ö†Ô∏è Op√ß√£o inv√°lida! Tente novamente.")


if __name__ == "__main__":
    menu()


